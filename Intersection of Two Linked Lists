/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    int getCount(ListNode *head)
    {
        int cnt=0;
        ListNode *temp=head;
        while(temp)
        {
            cnt++;
            temp=temp->next;
        }
        return cnt;
    }
    ListNode *get_IntersectionNode(int d,ListNode *headA, ListNode *headB)
    {
        ListNode* tempA=headA;
         ListNode* tempB=headB;
        for(int i=0;i<d;i++)
        {
            if(tempA==NULL)
                return NULL;
            tempA=tempA->next;
        }
        while(tempA!=NULL || tempB!=NULL)
        {
            if(tempA==tempB)
                return tempA;
         
                tempA=tempA->next;
            tempB=tempB->next;
        }
         return NULL;
    }
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int c1=getCount(headA);
        int c2=getCount(headB);
        if(c1>c2)
            return get_IntersectionNode(c1-c2,headA,headB);
        else
        {
            return get_IntersectionNode(c2-c1,headB,headA);
        }
    }
};
